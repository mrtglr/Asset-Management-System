// <auto-generated />
using System;
using AuthLoginDemo_bnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AuthLoginDemo_bnd.Migrations
{
    [DbContext(typeof(AuthenticationContext))]
    [Migration("20220225174937_mg4")]
    partial class mg4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserAddress")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<bool>("UserRole")
                        .HasColumnType("boolean");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.Asset", b =>
                {
                    b.Property<int>("asset_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<string>("attribute")
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<int>("neighbourhood_id")
                        .HasColumnType("integer");

                    b.Property<int>("worth")
                        .HasColumnType("integer");

                    b.HasKey("asset_id");

                    b.HasIndex("Id");

                    b.HasIndex("neighbourhood_id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.District", b =>
                {
                    b.Property<int>("district_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("district_name")
                        .HasColumnType("text");

                    b.Property<int>("province_id")
                        .HasColumnType("integer");

                    b.HasKey("district_id");

                    b.HasIndex("province_id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.LogOperations", b =>
                {
                    b.Property<int>("log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("date_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("log_situation")
                        .HasColumnType("boolean");

                    b.Property<string>("process")
                        .HasColumnType("text");

                    b.Property<string>("statement")
                        .HasColumnType("text");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_ip")
                        .HasColumnType("text");

                    b.HasKey("log_id");

                    b.ToTable("LogOperations");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.Neighbourhood", b =>
                {
                    b.Property<int>("neighbourhood_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("district_id")
                        .HasColumnType("integer");

                    b.Property<string>("neighbourhood_name")
                        .HasColumnType("text");

                    b.HasKey("neighbourhood_id");

                    b.HasIndex("district_id");

                    b.ToTable("Neighbourhoods");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.Province", b =>
                {
                    b.Property<int>("province_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("province_name")
                        .HasColumnType("text");

                    b.HasKey("province_id");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.Asset", b =>
                {
                    b.HasOne("AuthLoginDemo_bnd.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.HasOne("AuthLoginDemo_bnd.Models.Neighbourhood", "Neighbourhood")
                        .WithMany()
                        .HasForeignKey("neighbourhood_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Neighbourhood");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.District", b =>
                {
                    b.HasOne("AuthLoginDemo_bnd.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("province_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("AuthLoginDemo_bnd.Models.Neighbourhood", b =>
                {
                    b.HasOne("AuthLoginDemo_bnd.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("district_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
