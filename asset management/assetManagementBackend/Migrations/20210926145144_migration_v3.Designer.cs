// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using assetManagementBackend.Data;

namespace assetManagementBackend.Migrations
{
    [DbContext(typeof(AssetContext))]
    [Migration("20210926145144_migration_v3")]
    partial class migration_v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("assetManagementBackend.Models.Asset", b =>
                {
                    b.Property<int>("asset_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<string>("attribute")
                        .HasColumnType("text");

                    b.Property<int>("block")
                        .HasColumnType("integer");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<int>("neighbourhood_id")
                        .HasColumnType("integer");

                    b.Property<int>("parcel")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("asset_id");

                    b.HasIndex("neighbourhood_id");

                    b.HasIndex("user_id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("assetManagementBackend.Models.District", b =>
                {
                    b.Property<int>("district_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("district_name")
                        .HasColumnType("text");

                    b.Property<int>("province_id")
                        .HasColumnType("integer");

                    b.HasKey("district_id");

                    b.HasIndex("province_id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("assetManagementBackend.Models.LogOperations", b =>
                {
                    b.Property<int>("log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("date_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("log_situation")
                        .HasColumnType("boolean");

                    b.Property<string>("process")
                        .HasColumnType("text");

                    b.Property<string>("statement")
                        .HasColumnType("text");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_ip")
                        .HasColumnType("text");

                    b.HasKey("log_id");

                    b.ToTable("LogOperations");
                });

            modelBuilder.Entity("assetManagementBackend.Models.Neighbourhood", b =>
                {
                    b.Property<int>("neighbourhood_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("district_id")
                        .HasColumnType("integer");

                    b.Property<string>("neighbourhood_name")
                        .HasColumnType("text");

                    b.HasKey("neighbourhood_id");

                    b.HasIndex("district_id");

                    b.ToTable("Neighbourhoods");
                });

            modelBuilder.Entity("assetManagementBackend.Models.Province", b =>
                {
                    b.Property<int>("province_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("province_name")
                        .HasColumnType("text");

                    b.HasKey("province_id");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("assetManagementBackend.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<string>("user_adress")
                        .HasColumnType("text");

                    b.Property<string>("user_email")
                        .HasColumnType("text");

                    b.Property<string>("user_name")
                        .HasColumnType("text");

                    b.Property<string>("user_password")
                        .HasColumnType("text");

                    b.Property<bool>("user_role")
                        .HasColumnType("boolean");

                    b.Property<string>("user_surname")
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("assetManagementBackend.Models.Asset", b =>
                {
                    b.HasOne("assetManagementBackend.Models.Neighbourhood", "Neighbourhood")
                        .WithMany()
                        .HasForeignKey("neighbourhood_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("assetManagementBackend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Neighbourhood");

                    b.Navigation("User");
                });

            modelBuilder.Entity("assetManagementBackend.Models.District", b =>
                {
                    b.HasOne("assetManagementBackend.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("province_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("assetManagementBackend.Models.Neighbourhood", b =>
                {
                    b.HasOne("assetManagementBackend.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("district_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
